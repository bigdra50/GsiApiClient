/*
 * 国土地理院測量計算API
 *
 * 国土地理院が提供する測量計算のためのREST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = GsiApi.Client.OpenAPIDateConverter;

namespace GsiApi.Model
{
    /// <summary>
    /// SurveycalcTransPlGet200ResponseOutputData
    /// </summary>
    [DataContract(Name = "_surveycalc_trans_pl_get_200_response_OutputData")]
    public partial class SurveycalcTransPlGet200ResponseOutputData
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SurveycalcTransPlGet200ResponseOutputData" /> class.
        /// </summary>
        /// <param name="geocentricX">geocentricX.</param>
        /// <param name="geocentricY">geocentricY.</param>
        /// <param name="geocentricZ">geocentricZ.</param>
        public SurveycalcTransPlGet200ResponseOutputData(double geocentricX = default(double), double geocentricY = default(double), double geocentricZ = default(double))
        {
            this.GeocentricX = geocentricX;
            this.GeocentricY = geocentricY;
            this.GeocentricZ = geocentricZ;
        }

        /// <summary>
        /// Gets or Sets GeocentricX
        /// </summary>
        [DataMember(Name = "geocentricX", EmitDefaultValue = false)]
        public double GeocentricX { get; set; }

        /// <summary>
        /// Gets or Sets GeocentricY
        /// </summary>
        [DataMember(Name = "geocentricY", EmitDefaultValue = false)]
        public double GeocentricY { get; set; }

        /// <summary>
        /// Gets or Sets GeocentricZ
        /// </summary>
        [DataMember(Name = "geocentricZ", EmitDefaultValue = false)]
        public double GeocentricZ { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SurveycalcTransPlGet200ResponseOutputData {\n");
            sb.Append("  GeocentricX: ").Append(GeocentricX).Append("\n");
            sb.Append("  GeocentricY: ").Append(GeocentricY).Append("\n");
            sb.Append("  GeocentricZ: ").Append(GeocentricZ).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
