/*
 * 国土地理院測量計算API
 *
 * 国土地理院が提供する測量計算のためのREST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GsiApi.Client;
using GsiApi.Api;
// uncomment below to import models
//using GsiApi.Model;

namespace GsiApi.Test.Api
{
    /// <summary>
    ///  Class for testing SurveyCalcApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SurveyCalcApiTests : IDisposable
    {
        private SurveyCalcApi instance;

        public SurveyCalcApiTests()
        {
            instance = new SurveyCalcApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SurveyCalcApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SurveyCalcApi
            //Assert.IsType<SurveyCalcApi>(instance);
        }

        /// <summary>
        /// Test SurveycalcBl2stCalcPlGet
        /// </summary>
        [Fact]
        public void SurveycalcBl2stCalcPlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string outputType = null;
            //string ellipsoid = null;
            //double latitude1 = null;
            //double longitude1 = null;
            //double latitude2 = null;
            //double longitude2 = null;
            //var response = instance.SurveycalcBl2stCalcPlGet(outputType, ellipsoid, latitude1, longitude1, latitude2, longitude2);
            //Assert.IsType<SurveycalcBl2stCalcPlGet200Response>(response);
        }

        /// <summary>
        /// Test SurveycalcBl2xyPlGet
        /// </summary>
        [Fact]
        public void SurveycalcBl2xyPlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string outputType = null;
            //int refFrame = null;
            //double latitude = null;
            //double longitude = null;
            //int? zone = null;
            //var response = instance.SurveycalcBl2xyPlGet(outputType, refFrame, latitude, longitude, zone);
            //Assert.IsType<SurveycalcBl2xyPlGet200Response>(response);
        }

        /// <summary>
        /// Test SurveycalcTransPlGet
        /// </summary>
        [Fact]
        public void SurveycalcTransPlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string outputType = null;
            //int cnvType = null;
            //double latitude = null;
            //double longitude = null;
            //float? altitude = null;
            //float? geoidHeight = null;
            //double? geocentricX = null;
            //double? geocentricY = null;
            //double? geocentricZ = null;
            //var response = instance.SurveycalcTransPlGet(outputType, cnvType, latitude, longitude, altitude, geoidHeight, geocentricX, geocentricY, geocentricZ);
            //Assert.IsType<SurveycalcTransPlGet200Response>(response);
        }

        /// <summary>
        /// Test SurveycalcXy2blPlGet
        /// </summary>
        [Fact]
        public void SurveycalcXy2blPlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string outputType = null;
            //int refFrame = null;
            //int? zone = null;
            //double? publicX = null;
            //double? publicY = null;
            //var response = instance.SurveycalcXy2blPlGet(outputType, refFrame, zone, publicX, publicY);
            //Assert.IsType<SurveycalcXy2blPlGet200Response>(response);
        }

        /// <summary>
        /// Test SurveycalcXy2stPlGet
        /// </summary>
        [Fact]
        public void SurveycalcXy2stPlGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string outputType = null;
            //int refFrame = null;
            //double publicX1 = null;
            //double publicY1 = null;
            //double publicX2 = null;
            //double publicY2 = null;
            //int? zone = null;
            //var response = instance.SurveycalcXy2stPlGet(outputType, refFrame, publicX1, publicY1, publicX2, publicY2, zone);
            //Assert.IsType<SurveycalcXy2stPlGet200Response>(response);
        }
    }
}
