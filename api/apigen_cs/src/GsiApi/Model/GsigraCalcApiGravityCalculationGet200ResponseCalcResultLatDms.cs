/*
 * 国土地理院測量計算API
 *
 * 国土地理院が提供する測量計算のためのREST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = GsiApi.Client.OpenAPIDateConverter;

namespace GsiApi.Model
{
    /// <summary>
    /// GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms
    /// </summary>
    [DataContract(Name = "_gsigra_calc_api_gravityCalculation_get_200_response_CalcResult_Lat_dms")]
    public partial class GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms" /> class.
        /// </summary>
        /// <param name="deg">deg.</param>
        /// <param name="min">min.</param>
        /// <param name="sec">sec.</param>
        public GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms(int deg = default(int), int min = default(int), float sec = default(float))
        {
            this.Deg = deg;
            this.Min = min;
            this.Sec = sec;
        }

        /// <summary>
        /// Gets or Sets Deg
        /// </summary>
        [DataMember(Name = "Deg", EmitDefaultValue = false)]
        public int Deg { get; set; }

        /// <summary>
        /// Gets or Sets Min
        /// </summary>
        [DataMember(Name = "Min", EmitDefaultValue = false)]
        public int Min { get; set; }

        /// <summary>
        /// Gets or Sets Sec
        /// </summary>
        [DataMember(Name = "Sec", EmitDefaultValue = false)]
        public float Sec { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms {\n");
            sb.Append("  Deg: ").Append(Deg).Append("\n");
            sb.Append("  Min: ").Append(Min).Append("\n");
            sb.Append("  Sec: ").Append(Sec).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
