/*
 * 国土地理院測量計算API
 *
 * 国土地理院が提供する測量計算のためのREST API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = GsiApi.Client.OpenAPIDateConverter;

namespace GsiApi.Model
{
    /// <summary>
    /// GsigraCalcApiGravityCalculationGet200ResponseCalcResult
    /// </summary>
    [DataContract(Name = "_gsigra_calc_api_gravityCalculation_get_200_response_CalcResult")]
    public partial class GsigraCalcApiGravityCalculationGet200ResponseCalcResult
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GsigraCalcApiGravityCalculationGet200ResponseCalcResult" /> class.
        /// </summary>
        /// <param name="dataVer">dataVer.</param>
        /// <param name="gravity">gravity.</param>
        /// <param name="gravityData">gravityData.</param>
        /// <param name="h">h.</param>
        /// <param name="latDeg">latDeg.</param>
        /// <param name="latDms">latDms.</param>
        /// <param name="lonDeg">lonDeg.</param>
        /// <param name="lonDms">lonDms.</param>
        /// <param name="program">program.</param>
        /// <param name="dH">dH.</param>
        public GsigraCalcApiGravityCalculationGet200ResponseCalcResult(string dataVer = default(string), float gravity = default(float), string gravityData = default(string), float h = default(float), float latDeg = default(float), GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms latDms = default(GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms), float lonDeg = default(float), GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms lonDms = default(GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms), string program = default(string), float dH = default(float))
        {
            this.DataVer = dataVer;
            this.Gravity = gravity;
            this.GravityData = gravityData;
            this.H = h;
            this.LatDeg = latDeg;
            this.LatDms = latDms;
            this.LonDeg = lonDeg;
            this.LonDms = lonDms;
            this.Program = program;
            this.DH = dH;
        }

        /// <summary>
        /// Gets or Sets DataVer
        /// </summary>
        [DataMember(Name = "DataVer", EmitDefaultValue = false)]
        public string DataVer { get; set; }

        /// <summary>
        /// Gets or Sets Gravity
        /// </summary>
        [DataMember(Name = "Gravity", EmitDefaultValue = false)]
        public float Gravity { get; set; }

        /// <summary>
        /// Gets or Sets GravityData
        /// </summary>
        [DataMember(Name = "GravityData", EmitDefaultValue = false)]
        public string GravityData { get; set; }

        /// <summary>
        /// Gets or Sets H
        /// </summary>
        [DataMember(Name = "H", EmitDefaultValue = false)]
        public float H { get; set; }

        /// <summary>
        /// Gets or Sets LatDeg
        /// </summary>
        [DataMember(Name = "Lat_deg", EmitDefaultValue = false)]
        public float LatDeg { get; set; }

        /// <summary>
        /// Gets or Sets LatDms
        /// </summary>
        [DataMember(Name = "Lat_dms", EmitDefaultValue = false)]
        public GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms LatDms { get; set; }

        /// <summary>
        /// Gets or Sets LonDeg
        /// </summary>
        [DataMember(Name = "Lon_deg", EmitDefaultValue = false)]
        public float LonDeg { get; set; }

        /// <summary>
        /// Gets or Sets LonDms
        /// </summary>
        [DataMember(Name = "Lon_dms", EmitDefaultValue = false)]
        public GsigraCalcApiGravityCalculationGet200ResponseCalcResultLatDms LonDms { get; set; }

        /// <summary>
        /// Gets or Sets Program
        /// </summary>
        [DataMember(Name = "Program", EmitDefaultValue = false)]
        public string Program { get; set; }

        /// <summary>
        /// Gets or Sets DH
        /// </summary>
        [DataMember(Name = "dH", EmitDefaultValue = false)]
        public float DH { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GsigraCalcApiGravityCalculationGet200ResponseCalcResult {\n");
            sb.Append("  DataVer: ").Append(DataVer).Append("\n");
            sb.Append("  Gravity: ").Append(Gravity).Append("\n");
            sb.Append("  GravityData: ").Append(GravityData).Append("\n");
            sb.Append("  H: ").Append(H).Append("\n");
            sb.Append("  LatDeg: ").Append(LatDeg).Append("\n");
            sb.Append("  LatDms: ").Append(LatDms).Append("\n");
            sb.Append("  LonDeg: ").Append(LonDeg).Append("\n");
            sb.Append("  LonDms: ").Append(LonDms).Append("\n");
            sb.Append("  Program: ").Append(Program).Append("\n");
            sb.Append("  DH: ").Append(DH).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
