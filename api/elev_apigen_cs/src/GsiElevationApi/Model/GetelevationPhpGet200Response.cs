/*
 * 国土地理院標高API
 *
 * 指定した緯度経度の位置の標高値を取得するAPIです。 2013年3月14日より試験公開されています。  ## リクエストレート制限 サーバに過度の負担を与えないでください。過度の負担を与えると判断したアクセスについて、 国土地理院は予告なく遮断を行う場合があります。具体的な制限値は公開されていませんが、 アプリケーションの設計時には適切なレート制限を実装することを強く推奨します。 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = GsiElevationApi.Client.OpenAPIDateConverter;

namespace GsiElevationApi.Model
{
    /// <summary>
    /// GetelevationPhpGet200Response
    /// </summary>
    [DataContract(Name = "_getelevation_php_get_200_response")]
    public partial class GetelevationPhpGet200Response
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetelevationPhpGet200Response" /> class.
        /// </summary>
        /// <param name="elevation">標高値（メートル）.</param>
        /// <param name="hsrc">標高データのデータソース.</param>
        public GetelevationPhpGet200Response(float elevation = default(float), string hsrc = default(string))
        {
            this.Elevation = elevation;
            this.Hsrc = hsrc;
        }

        /// <summary>
        /// 標高値（メートル）
        /// </summary>
        /// <value>標高値（メートル）</value>
        [DataMember(Name = "elevation", EmitDefaultValue = false)]
        public float Elevation { get; set; }

        /// <summary>
        /// 標高データのデータソース
        /// </summary>
        /// <value>標高データのデータソース</value>
        [DataMember(Name = "hsrc", EmitDefaultValue = false)]
        public string Hsrc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetelevationPhpGet200Response {\n");
            sb.Append("  Elevation: ").Append(Elevation).Append("\n");
            sb.Append("  Hsrc: ").Append(Hsrc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
